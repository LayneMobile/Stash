/*
 * Copyright 2016 Layne Mobile, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import stash.Build

buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'http://dl.bintray.com/laynemobile/maven' }
        maven { url 'http://dl.bintray.com/laynemobile/stash' }
        maven { url 'http://dl.bintray.com/laynemobile/sourcerer' }
        mavenLocal()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:${appAndroidGradleVersion}"
        classpath "com.neenbedankt.gradle.plugins:android-apt:${appAptGradleVersion}"
        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:2.2.2'
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:${appBintrayGradlePlugin}"
        classpath "com.github.dcendents:android-maven-gradle-plugin:${appAndroidMavenGradleVersion}"
        classpath "com.laynemobile.sourcerer:extensions-plugin:${appSourcererVersion}"
    }
}

ext {
    LICENSES = ["Apache-2.0"]
}

subprojects {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'http://dl.bintray.com/laynemobile/maven' }
        maven { url 'http://dl.bintray.com/laynemobile/stash' }
        maven { url 'http://dl.bintray.com/laynemobile/sourcerer' }
        flatDir {
            dirs "${project.rootDir}/libs"
        }
        mavenLocal()
    }

    configurations {
        testCompile
    }

    dependencies {
        // testing
        testCompile "junit:junit:${appJunitVersion}"
        testCompile "org.mockito:mockito-core:${appMockitoVersion}"
        testCompile "org.robolectric:robolectric:${appRoboelectricVersion}"
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
